#ifndef OSMIUM_RELATIONS_GENERIC_RELATIONS_MANAGER_HPP
#define OSMIUM_RELATIONS_GENERIC_RELATIONS_MANAGER_HPP

/*

This file is part of Osmium (http://osmcode.org/libosmium).

Copyright 2013-2017 Jochen Topf <jochen@topf.org> and others (see README).

Boost Software License - Version 1.0 - August 17th, 2003

Permission is hereby granted, free of charge, to any person or organization
obtaining a copy of the software and accompanying documentation covered by
this license (the "Software") to use, reproduce, display, distribute,
execute, and transmit the Software, and to prepare derivative works of the
Software, and to permit third-parties to whom the Software is furnished to
do so, all subject to the following:

The copyright notices in the Software and this entire statement, including
the above license grant, this restriction and the following disclaimer,
must be included in all copies of the Software, in whole or in part, and
all derivative works of the Software, unless such copies or derivative
works are solely in the form of machine-executable object code generated by
a source language processor.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
DEALINGS IN THE SOFTWARE.

*/

#include <algorithm>
#include <cstddef>
#include <cstdint>
#include <cstring>
#include <stdexcept>
#include <vector>

#include <osmium/handler.hpp>
#include <osmium/handler/check_order.hpp>
#include <osmium/memory/buffer.hpp>
#include <osmium/memory/callback_buffer.hpp>
#include <osmium/osm/item_type.hpp>
#include <osmium/osm/relation.hpp>
#include <osmium/osm/tag.hpp>
#include <osmium/osm/way.hpp>
#include <osmium/relations/manager_util.hpp>
#include <osmium/relations/members_database.hpp>
#include <osmium/relations/relations_database.hpp>
#include <osmium/relations/relations_manager.hpp>
#include <osmium/storage/item_stash.hpp>
#include <osmium/tags/taglist.hpp>
#include <osmium/tags/tags_filter.hpp>

namespace osmium {

    namespace relations {

        /**
         * This is a generic "member collector" for relations. It keeps track
         * of all relations (possibly matching some tags) and all members of
         * those relations. When all members are available it calls the
         * function call operator on the specified assembler.
         *
         * @pre The Ids of all objects must be unique in the input data.
         */
        template <typename TAssembler>
        class GenericRelationsManager : public osmium::relations::RelationsManager<GenericRelationsManager<TAssembler>, true, true, true> {

            TAssembler& m_assembler;

            osmium::TagsFilter m_filter;

        public:

            explicit GenericRelationsManager(TAssembler& assembler, const osmium::TagsFilter& filter = osmium::TagsFilter{true}) :
                RelationsManager<GenericRelationsManager<TAssembler>, true, true, true>(),
                m_assembler(assembler),
                m_filter(filter) {
            }

            bool keep_relation(const osmium::Relation& relation) const {
                return osmium::tags::match_any_of(relation.tags(), m_filter);
            }

            void complete_relation(const osmium::Relation& relation) {
                std::vector<const osmium::OSMObject*> members;
                members.reserve(relation.members().size());

                for (const auto& member : relation.members()) {
                    members.push_back(&this->member_database(member.type()).get_object(member.ref()));
                }

                m_assembler(relation, members, this->buffer());
            }

        }; // class GenericRelationsManager

    } // namespace relations

} // namespace osmium

#endif // OSMIUM_RELATIONS_GENERIC_RELATIONS_MANAGER_HPP
